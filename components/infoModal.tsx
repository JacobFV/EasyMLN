import { EditRounded, PlayArrowRounded, ShareRounded, VisibilityRounded } from '@mui/icons-material'
import { Box, Button, ButtonGroup, FormControl, FormControlLabel, FormLabel, Link, Radio, RadioGroup, TextField, Typography } from '@mui/material'
import React from 'react'
import timeAgo from '../lib/timeAgo'
import * as auth from './../lib/auth/auth'
import Workflow from './../types/workflow'
import { BasicTabs } from './basicTabs'
import UploadButton from './upload'


export default function InfoModal(props: {
    workflow: Workflow
}) {

    return <div>
    <DetailsHeader workflow={props.workflow} />

    <BasicTabs panelTitles={["Overview", "Versions"]}>
        <OverviewTab workflow={props.workflow} />
        <VersionsTab workflow={props.workflow} />
        <ExperimentsTab workflow={props.workflow} />
    </BasicTabs>
    </div>
}


function DetailsHeader(props: {workflow: Workflow}) {

    const { workflow } = props

    // TODO: make image appear on left and text/buttons on right if there's enough space
    return <>
        <img 
            src={workflow.previewImageURL} 
            alt={workflow.name} />

        <Typography variant="h1" component="h1">
            {workflow.name}
        </Typography>
        <ButtonGroup variant="contained">
            <Button startIcon={<PlayArrowRounded />}>
                <Link href="/workflows/[id]/edit">
                    Run
                </Link>
            </Button>
            {auth.canEditWorkflow(workflow) ?
                (<Button startIcon={<EditRounded />}>
                    <Link href="/workflows/[id]/edit">
                        Edit
                    </Link>
                </Button>) :
                (<Button startIcon={<VisibilityRounded />}>
                    <Link href="/workflows/[id]/edit">
                        View
                    </Link>
                </Button>)}
            <Button startIcon={<ShareRounded />}>
                <Link href={`$/workflows/${workflow.guid}`}>
                    Share
                </Link>
            </Button>
        </ButtonGroup>
    </>
}

function OverviewTab(props: {workflow: Workflow}) {

    const { workflow } = props

    return (
        <div>
            <TextField 
                id="standard-basic" 
                label="Name" 
                value={workflow.name}
                multiline
                InputProps={{
                    readOnly: !auth.canEditWorkflow(workflow),
                }}
                />
            <TextField 
                id="standard-basic" 
                label="Description" 
                value={workflow.description}
                multiline
                InputProps={{
                    readOnly: !auth.canEditWorkflow(workflow),
                }}
                />
            <Box sx={{ m: 1 }} />
            <Typography variant="caption" display="block" gutterBottom>
                Created {timeAgo(workflow.dateCreated)}
            </Typography>
            <Typography variant="caption" display="block" gutterBottom>
                Last modified {timeAgo(workflow.dateUpdated)}
            </Typography>
            <Box sx={{ m: 1 }} />
            <FormControl component="fieldset">
                <FormLabel component="legend">Workflow Image</FormLabel>
                <RadioGroup
                    aria-label="useAutogenerated"
                    name="radio-buttons-group"
                    value={workflow.useAutogeneratedPreviewImage}
                >
                    <FormControlLabel value="autogenerated" control={<Radio />} label="Autogenerated from last experiment" />
                    <FormControlLabel value="custom" control={<Radio />} label="Custom image" />
                </RadioGroup>
            </FormControl>
            <UploadButton 
                acceptFilter="image/*"
                buttonText="Upload image"
                onUpload={(file: File) => {
                    // set db directly
                }} />
        </div>
    );
}

function VersionsTab(props: {workflow: Workflow}) {

    const { workflow } = props
    
    return (
        <div>
            <h2>Versions</h2>
            
        </div>
    )
}

function ExperimentsTab(props: {workflow: Workflow}) {

    const { workflow } = props

    return (
        <div>
            <h2>Experiments</h2>
        </div>
    )
}